from mol_api import Molecule
import matplotlib.pyplot as plt

def report_of_random_path_search(file_name, reactant, product):
    path, steps = reactant.notation.s_change(product.notation, follow_energy=True, sh=True, keep_change=True)
    path2, steps2 = reactant.notation.l_change(product.notation, follow_energy=True, sh=True, keep_change=True)
    with open(file_name, 'w') as f_w:
        f_w.write('It is a random path\n')
        f_w.write('{} is maximum value along path\n'.format(str((max(path), max(path2)))))
        f_w.write('Energies:\n')
        f_w.write(' '.join(list(map(str, path+path2))))
        f_w.write('\n------\n')
        f_w.write('Section changes')
        for ix, i in enumerate(steps):
            f_w.write('\nStep {}\n'.format(str(ix)))
            f_w.write(' '.join(list(map(str, i))))
        f_w.write('\n------\n')
        f_w.write('Length changes')
        for ix, i in enumerate(steps2):
            f_w.write('\nStep {}\n'.format(str(ix)))
            f_w.write('{} {} {}\n'.format(i[0], i[2][0], i[2][1]))
        f_w.write('------')



if __name__ == '__main__':

    # ens = [169.4375, 172.46102, 208.57695, 207.27204, 205.77698, 210.82754, 227.50738, 235.17236, 236.19232, 430.44865, 308.741, 301.53036, 295.69437, 324.66796, 331.54375, 333.51515, 303.23042, 262.87567, 187.79816, 195.59547, 311.35378, 300.91391, 300.91391, 335.59093, 324.23372, 332.4291, 330.4519, 397.67355, 377.63472, 323.02267, 308.37105, 300.715, 300.715, 300.715, 363.91834, 363.91834, 363.91834, 363.91834, 378.37805, 378.37805, 414.08609, 414.08609, 414.08609, 405.25037, 405.25037, 408.22369, 213.49057, 213.49057, 213.49057, 213.49057, 213.49057, 213.49057, 165.10815, 165.10815, 165.10815, 165.10815, 148.16086]
    # plt.plot(list(range(len(ens))), ens)

    # plt.title('Discrete path for n=8')
    # l1 = [170.09561, 170.09561, 168.70896, 168.70896, 168.70896, 168.70896, 185.12978, 185.12978, 187.93455, 187.93455, 187.93455, 193.5161, 193.5161, 198.69101, 221.50086, 221.50086, 221.50086, 221.50086, 221.50086, 221.50086, 305.6816, 305.6816, 305.6816, 305.6816, 300.65498]
    # s1 = [298.17544, 311.70823, 333.56059, 323.80904, 324.20464, 330.21183, 351.65733, 349.53586, 350.47236, 278.19014, 363.31599, 368.99267, 360.96284, 342.71406, 321.248, 332.39765, 334.37003, 424.62119, 1107.99635, 746.80418, 649.03935, 636.97637, 636.97637, 229.45084, 235.70548, 239.69453, 229.99886, 226.45322, 208.14885, 159.84522, 147.13037, 148.16086]
    # l2 = [300.715, 300.715, 363.91834, 363.91834, 363.91834, 363.91834, 378.37805, 378.37805, 414.08609, 414.08609, 414.08609, 405.25037, 405.25037, 408.22369, 213.49057, 213.49057, 213.49057, 213.49057, 213.49057, 213.49057, 165.10815, 165.10815, 165.10815, 165.10815, 148.16086]
    # s2 = [169.4375, 172.46102, 208.57695, 207.27204, 205.77698, 210.82754, 227.50738, 235.17236, 236.19232, 430.44865, 308.741, 301.53036, 295.69437, 324.66796, 331.54375, 333.51515, 303.23042, 262.87567, 187.79816, 195.59547, 311.35378, 300.91391, 300.91391, 335.59093, 324.23372, 332.4291, 330.4519, 397.67355, 377.63472, 323.02267, 308.37105, 300.715]

    # plt.title('Discrete path for n=15')
    # l1 = [151.1123, 151.1123, 151.48208, 151.48208, 151.48208, 151.48208, 167.98202, 167.98202, 174.19867, 174.19867,
    #  174.19867, 179.66445, 179.66445, 183.85184, 204.64832, 204.64832, 204.64832, 204.64832, 204.64832, 204.64832,
    #  268.65536, 268.65536, 268.65536, 268.65536, 260.08207]
    # s1 = [270.43024, 269.51703, 270.90474, 253.07055, 247.62324, 265.83936, 257.41236, 258.84567, 255.14448, 259.42639, 261.79762, 265.39492, 279.5053, 282.12035, 266.07287, 265.28189, 283.22398, 236.95161, 318.93793, 330.72472, 323.66068, 318.96458, 310.46498, 305.15791, 323.19252, 401.90506, 436.50594, 394.38636, 543.32167, 506.73524, 504.4263, 504.4263, 181.3406, 182.13786, 206.98923, 175.87178, 170.97796, 197.45423, 178.84213, 139.56655, 139.86633, 139.70987, 140.73122, 140.64795]
    # l2 = [153.45425, 154.48237, 154.32191, 167.62036, 166.5277, 193.4223, 183.71762, 175.91897, 180.65648, 184.31438, 188.08039, 196.4051, 208.06123, 206.35628, 202.57631, 201.52121, 203.73996, 408.05764, 276.5904, 285.56227, 281.00079, 293.55139, 316.86276, 304.01008, 300.31896, 251.48664, 202.9739, 221.60209, 361.7464, 348.15963, 348.46007, 348.46007, 377.088, 367.98058, 390.48815, 383.14662, 345.54395, 397.85445, 373.99902, 326.87361, 323.67203, 325.27189, 321.83058, 325.24085]
    # s2 = [325.24085, 325.24085, 383.88921, 383.88921, 383.88921, 383.88921, 397.79119, 397.79119, 445.09876, 445.09876, 445.09876, 437.68356, 437.68356, 429.9914, 209.91704, 209.91704, 209.91704, 209.91704, 209.91704, 209.91704, 159.24554, 159.24554, 159.24554, 159.24554, 140.64795]

    # plt.title('Discrete path for n=20')
    # l1 = [149.24213, 149.24213, 151.44266, 151.44266, 151.44266, 151.44266, 167.08377, 167.08377, 175.14636, 175.14636, 175.14636, 180.47163, 180.47163, 184.10167, 202.22335, 202.22335, 202.22335, 202.22335, 202.22335, 202.22335, 261.69676, 261.69676, 261.69676, 261.69676, 253.20879]
    # s1 = [260.38389, 255.91417, 257.44429, 246.96603, 239.68434, 258.22881, 258.65552, 256.19428, 257.7445, 266.55897, 269.74697, 286.30964, 286.33092, 277.25541, 276.80983, 287.13572, 299.34159, 248.00982, 312.46085, 318.68686, 312.23724, 307.53118, 292.43462, 278.73498, 287.59239, 296.82674, 284.15973, 353.65756, 399.49465, 383.05524, 482.41445, 441.23301, 441.23301, 182.48362, 181.14809, 185.39768, 187.09271, 173.66049, 168.58699, 185.23679, 178.95065, 137.43814, 137.89699, 138.46738]
    # l2 = [157.62318, 156.19336, 156.25206, 170.49872, 158.62097, 187.51838, 189.13833, 187.75257, 194.2612, 203.60193, 206.38905, 218.03, 213.61562, 213.67645, 213.07082, 212.52206, 220.22067, 366.73579, 248.27138, 251.14087, 253.96346, 252.43113, 254.43581, 265.60416, 267.70016, 305.11907, 266.12512, 226.49876, 190.52341, 194.81238, 320.68492, 308.58841, 308.58841, 391.89019, 379.52075, 389.22854, 382.24703, 385.89954, 357.90659, 401.72041, 393.549, 341.73696, 336.89086, 330.81128]
    # s2 = [330.81128, 330.81128, 393.01798, 393.01798, 393.01798, 393.01798, 405.77608, 405.77608, 454.43989, 454.43989, 454.43989, 446.21883, 446.21883, 440.72045, 211.76462, 211.76462, 211.76462, 211.76462, 211.76462, 211.76462, 155.46143, 155.46143, 155.46143, 155.46143, 138.46738]
    #
    n = 10
    reaction = 'mopac_example'  # '3a->4' #
    # reaction = '3a->4' #
    if reaction == '3a->4':
        ln = Molecule('./ordered_mol2/3a.mol2', n=n)
        pr = Molecule('./ordered_mol2/4_opted.mol2', n=n)
    else:
        ln = Molecule('./ordered_mol2/js_exapmle_init.mol2', n=n)
        pr = Molecule('./ordered_mol2/js_exapmle_finish.mol2', n=n)

    report_of_random_path_search('report', ln, pr)

    # plt.title('Discrete path for n={}, {}'.format(str(n), reaction))
    # path = ln.notation.s_change(pr.notation, follow_energy=True, sh=True) + ln.notation.s_change(pr.notation, follow_energy=True, sh=True)
    # # plt.plot(list(range(len(l1))), l1, color='g', label='length changers')
    # # plt.plot(list(range(len(l1), len(l1)+len(s1))), s1, color='b', label='sections changers')
    # # plt.plot(list(range(len(s2))), s2, color='b')
    # # plt.plot(list(range(len(s2), len(s2) + len(l2))), l2, color='g')
    # plt.plot(list(range(len(path))), path)
    # plt.xlabel('optimization step')
    # plt.ylabel('kcal/mol')
    # plt.legend()
    # plt.show()